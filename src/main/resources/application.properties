server.port=6060


# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/smartschools
spring.datasource.username = crewlink_db
spring.datasource.password = crewlink_db
spring.datasource.driver = com.mysql.jdbc.Driver


# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
# spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = create-drop
#spring.jpa.hibernate.ddl-auto = create
#spring.datasource.data=classpath:/database/extra_small_database_data.sql
#spring.datasource.data=classpath:/database/extra_small_database_data.sql
#spring.datasource.data=classpath:/database/init-data.sql
#spring.datasource.data=classpath:/database/full_database_data.sql

# Set base uri for rest repository
spring.data.rest.base-path = api

# Return a response Body after creating and updating an entity
spring.data.rest.return-body-on-create = true
spring.data.rest.return-body-on-update = true

# Max file size.
multipart.max-file-size=991049740
 # Max request size.
multipart.max-request-size=991759908

# Creating a session Bean 
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
